{"version":3,"sources":["../src/components/AnimatedText.tsx","../src/utils/splitter.ts","../src/presets/Fade.tsx","../src/presets/Slide.tsx"],"sourcesContent":["import React from \"react\";\nimport { splitText, SplitType } from \"../utils/splitter\";\nimport { Fade } from \"../presets/Fade\";\nimport { Slide } from \"../presets/Slide\";\n\ntype PresetType = \"fade\" | \"slide\";\n\ninterface AnimatedTextProps {\n  text: string;\n  preset?: PresetType;\n  split?: SplitType;\n  unitStagger?: number;\n  lineStagger?: number;\n  startDelay?: number;\n}\n\nexport const AnimatedText: React.FC<AnimatedTextProps> = ({\n  text,\n  preset = \"fade\",\n  split = \"character\",\n  unitStagger = 0.03,\n  lineStagger = 0.5,\n  startDelay = 0,\n}) => {\n  const lines = splitText(text, \"line\");\n\n  const renderUnit = (unit: string, delay: number, key: string) => {\n    if (preset === \"fade\") {\n      return (\n        <Fade key={key} delay={delay}>\n          {unit}\n        </Fade>\n      );\n    }\n    if (preset === \"slide\") {\n      return (\n        <Slide key={key} delay={delay}>\n          {unit}\n        </Slide>\n      );\n    }\n    return unit;\n  };\n\n  return (\n    <span style={{ display: \"inline-block\" }}>\n      {lines.map((line, lineIndex) => {\n        const units = split === \"line\" ? [line] : splitText(line, split);\n        return (\n          <span key={lineIndex} style={{ display: \"block\" }}>\n            {units.map((unit, unitIndex) => {\n              const totalDelay =\n                (startDelay ?? 0) +\n                lineIndex * lineStagger +\n                unitIndex * unitStagger;\n              const key = `${lineIndex}-${unitIndex}`;\n              return (\n                <React.Fragment key={key}>\n                  {renderUnit(unit, totalDelay, key)}\n                  {split === \"word\" && \" \"}\n                </React.Fragment>\n              );\n            })}\n          </span>\n        );\n      })}\n    </span>\n  );\n};\n","export type SplitType = \"character\" | \"word\" | \"line\";\n\nexport function splitText(text: string, type: SplitType): string[] {\n  if (type === \"character\") {\n    return text.split(\"\").map((char) => (char === \" \" ? \"\\u00A0\" : char));\n  }\n  if (type === \"word\") return text.split(\" \");\n  if (type === \"line\") return text.split(\"\\n\");\n  return [text];\n}\n","import { motion } from \"framer-motion\";\n\ninterface FadeProps {\n  children: string;\n  delay: number;\n}\n\nexport const Fade = ({ children, delay }: FadeProps) => {\n  return (\n    <motion.span\n      style={{ display: \"inline-block\" }}\n      initial={{ opacity: 0, y: 3 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{\n        delay: delay, // ✅ 이제 딜레이 계산 안함, 전달받은 값만 사용\n        duration: 0.8,\n        ease: \"easeOut\",\n      }}\n    >\n      {children}\n    </motion.span>\n  );\n};\n","import { motion } from \"framer-motion\";\n\ninterface SlideProps {\n  children: string;\n  delay: number;\n}\n\nexport const Slide = ({ children, delay }: SlideProps) => {\n  return (\n    <motion.span\n      style={{ display: \"inline-block\" }}\n      initial={{ opacity: 0, y: 3 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{\n        delay: delay, // ✅ 이제 딜레이 계산 안함, 전달받은 값만 사용\n        duration: 0.8,\n        ease: \"easeOut\",\n      }}\n    >\n      {children}\n    </motion.span>\n  );\n};\n"],"mappings":";AAAA,OAAO,WAAW;;;ACEX,SAAS,UAAU,MAAc,MAA2B;AACjE,MAAI,SAAS,aAAa;AACxB,WAAO,KAAK,MAAM,EAAE,EAAE,IAAI,CAAC,SAAU,SAAS,MAAM,SAAW,IAAK;AAAA,EACtE;AACA,MAAI,SAAS,OAAQ,QAAO,KAAK,MAAM,GAAG;AAC1C,MAAI,SAAS,OAAQ,QAAO,KAAK,MAAM,IAAI;AAC3C,SAAO,CAAC,IAAI;AACd;;;ACTA,SAAS,cAAc;AASnB;AAFG,IAAM,OAAO,CAAC,EAAE,UAAU,MAAM,MAAiB;AACtD,SACE;AAAA,IAAC,OAAO;AAAA,IAAP;AAAA,MACC,OAAO,EAAE,SAAS,eAAe;AAAA,MACjC,SAAS,EAAE,SAAS,GAAG,GAAG,EAAE;AAAA,MAC5B,SAAS,EAAE,SAAS,GAAG,GAAG,EAAE;AAAA,MAC5B,YAAY;AAAA,QACV;AAAA;AAAA,QACA,UAAU;AAAA,QACV,MAAM;AAAA,MACR;AAAA,MAEC;AAAA;AAAA,EACH;AAEJ;;;ACtBA,SAAS,UAAAA,eAAc;AASnB,gBAAAC,YAAA;AAFG,IAAM,QAAQ,CAAC,EAAE,UAAU,MAAM,MAAkB;AACxD,SACE,gBAAAA;AAAA,IAACD,QAAO;AAAA,IAAP;AAAA,MACC,OAAO,EAAE,SAAS,eAAe;AAAA,MACjC,SAAS,EAAE,SAAS,GAAG,GAAG,EAAE;AAAA,MAC5B,SAAS,EAAE,SAAS,GAAG,GAAG,EAAE;AAAA,MAC5B,YAAY;AAAA,QACV;AAAA;AAAA,QACA,UAAU;AAAA,QACV,MAAM;AAAA,MACR;AAAA,MAEC;AAAA;AAAA,EACH;AAEJ;;;AHOQ,gBAAAE,MA4BQ,YA5BR;AAbD,IAAM,eAA4C,CAAC;AAAA,EACxD;AAAA,EACA,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,cAAc;AAAA,EACd,cAAc;AAAA,EACd,aAAa;AACf,MAAM;AACJ,QAAM,QAAQ,UAAU,MAAM,MAAM;AAEpC,QAAM,aAAa,CAAC,MAAc,OAAe,QAAgB;AAC/D,QAAI,WAAW,QAAQ;AACrB,aACE,gBAAAA,KAAC,QAAe,OACb,kBADQ,GAEX;AAAA,IAEJ;AACA,QAAI,WAAW,SAAS;AACtB,aACE,gBAAAA,KAAC,SAAgB,OACd,kBADS,GAEZ;AAAA,IAEJ;AACA,WAAO;AAAA,EACT;AAEA,SACE,gBAAAA,KAAC,UAAK,OAAO,EAAE,SAAS,eAAe,GACpC,gBAAM,IAAI,CAAC,MAAM,cAAc;AAC9B,UAAM,QAAQ,UAAU,SAAS,CAAC,IAAI,IAAI,UAAU,MAAM,KAAK;AAC/D,WACE,gBAAAA,KAAC,UAAqB,OAAO,EAAE,SAAS,QAAQ,GAC7C,gBAAM,IAAI,CAAC,MAAM,cAAc;AAC9B,YAAM,cACH,kCAAc,KACf,YAAY,cACZ,YAAY;AACd,YAAM,MAAM,GAAG,SAAS,IAAI,SAAS;AACrC,aACE,qBAAC,MAAM,UAAN,EACE;AAAA,mBAAW,MAAM,YAAY,GAAG;AAAA,QAChC,UAAU,UAAU;AAAA,WAFF,GAGrB;AAAA,IAEJ,CAAC,KAbQ,SAcX;AAAA,EAEJ,CAAC,GACH;AAEJ;","names":["motion","jsx","jsx"]}